[プログラムの説明]
<演習1> 
Accountクラスのインスタンス2つを配列aに保持できるようにした。この時、情報は2人分であるので配列の要素は2つで十分である。次に、a[0]は足立君、a[1]は仲田君の情報を持つようにして、それぞれ、Accountクラスで作った名義などを取得するメソッドを使い、実行時に表示されるようにした。
<演習2>
まず、Dayクラスでは口座開設日(年、月、日)の情報を返すコンストラクタと口座開設日のみを文字列化して返すgetOpeningDateメソッドを作った。Accountクラスでは口座開設日を情報としてもつDayクラスの変数opdateを作り、要件通りAccountクラスのコンストラクタ2つを作った。1つ目は名義、番号、残高を表す変数name、no、balanseにn、num、bを加え、先ほどのopdateにDayクラスの変数dに入っている情報を取得して返すことができるようなもので、2つ目はopdateにそのまま、新しく取得した年月日をいれることができるものである。ここで、口座開設日の改ざんに対処するために2つめのコンストラクタは，opdateに仮引数の参照先のインスタンスを複製して入れるようにopdate = new Day(year, month, date);とした。また、文字列化のためのメソッドtoSt()を作った。AccountTesterクラスでは配列aにAccountクラスのインスタンスをを保持できるようにして、その配列の要素を文字列化した。
<演習3>
Periodクラスで開始日、終了日を表すDayクラス型の変数fromとtoをつくり、2つのDayクラス型の引数を「先の日付」がfrom，「後の日付」がtoに入るようにメソッドを使い条件を設定し、演習2と同様にそれぞれ格納する。この際、期間を改ざんされないようにするために仮引数の参照先のインスタンスを複製して入れる。また、期間を文字列にして返すメソッドtoStr()をつくる。ここで、toよりもfromのほうが先の日付であることが分かっているのでgetYear等を使い減算で期間を求める。
[理解度]
B
[感想]
インスタンスを配列に保持するというのはデータが多くなった時に対応が楽であるというのがあるのではないかと思った。また、演習においてpublic等のアクセス修飾子の使い道がやっと理解できたような気がした。あるクラスで何かを取得するメソッドを作り、それを他のクラスで利用するというのはこれからも多用することになるだろうと感じた。また、課題2で口座開設日はDayクラスのフィールドでのみ保持すること、という要件があったがこれもセキュリティが関係していて、他のクラスで口座開設日の情報を持たないことで改ざんの防止ができるからではないかと考えた。
[特記事項]

