[プログラムの説明]
<演習1>
Carクラス、Dayクラスをそれぞれ教科書通りに作る。次に、Carクラスの派生クラスとしてOdometerCarクラスを作る。派生クラス内で総走行距離の情報を含めたコンストラクタを宣言する。この際、Carクラスのコンストラクタをsuper()によって呼び出して名前、幅、高さ、長さ、残り燃料、購入日、情報を初期化して、派生クラスの総走行距離を表すインスタンスも初期化する。また、Carクラスのmoveメソッドを呼び出す派生クラスのメソッドであるmoveを作り、suoer.moveの返す結果によって場合分けをする。今回は残り燃料を表す、fuelが0以下になるとfalse、それまではtrueを返すので、trueの場合はその時点のx,y座標、総走行距離を出力する。falseの場合は燃料がなくなったと出力してその時点でプログラムを終了する。OdometerCarTesterクラスではOdometerCarクラスの変数aを作ってputSpec()メソッドで名前などの情報を出力する。そして、aで手に入れた燃料が0以下になるまで、移動したいx,y座標の距離をキーボードから入力できるようにして、その入力された数字を引数としてa.moveメソッド実行する。
<演習2>
前の課題で作ったAccountクラスの文字列化メソッドに定期預金口座の情報を加えるためにtimeBalanceの値が0かどうかで定期預金を出力するか決めるようにtoStringメソッドを改良する。また、Accountクラスの派生クラスであるTimeAccountクラスを作り、定期預金を含んだ口座名義等のインスタンスを初期化するコンストラクタをsuper()を使うことにより実装する。TimeAccountTester2クラスでは、Accountクラス、timeAccountクラスどちらでも引数に取れるようなメソッドcomBalanceを作り、引数がTimeAccountクラスかAccountクラスかで場合分けをする。もしある
[まとめ]

[理解度]

[感想]

[特記事項]
