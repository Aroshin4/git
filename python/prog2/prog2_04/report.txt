[プログラムの説明]
<演習1>
Semicircleクラスの親クラスであるShapeクラスは、抽象クラスであり、クラス内で図形情報を表す文字列を返却する抽象メソッドtoString()と、図形を描画するための抽象メソッド draw()を持っている。このことより、Shapeクラス内で、toString()メソッドを実装し、またその派生クラス内でdraw()メソッドを実装することを考える。まず、Semicircleクラスでは半径を表すフィールドradiusをつくり、そのradiusのセッタ、ゲッタを実装する。また、半径の値を初期化するコンストラクタを持つようにする。そして、その派生クラスRightSemicircleでは右半円を表す文字列を返すtoString()メソッドを作り、図形を書く用のメソッドdrow()を実装する。この際、右半円の中心がどこにあるかを考えてつくる。また、同じくSemicircleクラスの派生クラスであるUpperSemicircleクラスでも、上半円を表す文字列を返すtoString()メソッドを作り、図形を書く用のメソッドdrow()を実装する。テスタークラスではもともと実装されていた形に加える形で右半円、上半円を選べるようにしてそれぞれprint()メソッドで描けるようにする。
<演習2>
抽象クラスJankenPlayerクラスでは、引数も戻り値も持たない、じゃんけんでだす手を決める抽象メソッドhand()とじゃんけんする人の名前を決める抽象メソッドname()をつくる。
[まとめ]

[理解度]

[感想]

[特記事項]
