[プログラムの説明]
<演習1>
まず、Plane2Dインタフェースをつくり、周囲の長さを取得するメソッド、面積を求めるメソッドの二つの、戻り値や引数を持たない抽象メソッドを宣言する。次に、抽象クラスShapeをつくり、そこでjava.lang.Objectクラスのメソッドを抽象メソッドとしてオーバライドしたメソッドである。toStringと図形の描画をするための抽象メソッドdrawと図形情報の表示と図形の描画を行うメソッドprintを実装する。そして、Plane2Dインタフェースを実装する、かつShapeクラスの派生クラスであるParallelogramクラスとRectangleクラスをつくる。Parallelogramクラスでは、もともとあるプログラムに加えて、オーバライドした面積をもとめる抽象メソッドgetAreaと図形の周りの長さを求める抽象メソッドgetPerimeterを実装する。同じくRectangleクラスでももともとあるプログラムに加えて、オーバライドした面積をもとめる抽象メソッドgetAreaと図形の周りの長さを求める抽象メソッドgetPerimeterを実装する。テスタークラスではShape型の配列p1にRectangleクラスとParallelogramクラスのインスタンスの参照を格納する。そして配列の要素がPlane2Dのインスタンスでもあるなら面積と周囲の長さを表示させる。
<演習2>
まず、FIghterインターフェースをつくり、抽象メソッドattackを宣言する。次に、同じくインターフェースWizardをつくり、抽象メソッドfireを宣言する。そして、enemyクラスをFIghterインターフェースを実装するようにして、attackメソッドを実装する。また、HeroクラスをFighterインターフェース、Wizardインターフェースを実装するように修正し、attackメソッド、fireメソッドを実装する。多重継承ができているのを確認できた。テスタークラスでは、通常攻撃に加えて魔法攻撃ができるように、先ほど実装したfireメソッドを使い、選択により魔法攻撃ができるようにする。
(余談)魔法攻撃に種類をつけ、確率で会心攻撃、暴発が起きるようにした。
[まとめ]

[理解度]

[感想]

[特記事項]
